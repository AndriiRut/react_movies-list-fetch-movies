{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","id","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","title","a","fetch","result","json","FindMovie","addMovie","resetError","dublikate","useState","query","setQuery","Response","setMovie","foundError","setFoundError","clearCard","setClearCard","initialRender","useEffect","htmlFor","type","value","placeholder","classNames","onChange","event","target","onClick","getMovie","then","disabled","App","setMovies","setDublikate","findIndex","element","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ec0a82d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MovieCard.scss';\n\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  id: string,\n  movie: Movie,\n}\n\nexport const MovieCard: React.FC<Props> = ({ id, movie }) => {\n  return (\n    <div className=\"card\" key={id}>\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          id={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Movie } from '../react-app-env';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const result = await fetch(`https://www.omdbapi.com/?apikey=89317555&t=${title}`);\n\n  return result.json();\n}\n\nexport async function getMovieById(id: string): Promise<Movie> {\n  const result = await fetch(`https://www.omdbapi.com/?tt=${id}&apikey=89317555`);\n\n  return result.json();\n}\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\nimport { getMovie } from '../../api/api';\n\ninterface Props {\n  addMovie: (movie: Movie) => void,\n  resetError: () => void,\n  dublikate: boolean,\n}\n\nexport const FindMovie: React.FC<Props> = (\n  {\n    addMovie,\n    resetError,\n    dublikate,\n  },\n) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>({\n    Response: '',\n    Title: 'not found',\n    Poster: 'not found',\n    imdbID: 'not found',\n  });\n\n  const [foundError, setFoundError] = useState(false);\n  const [clearCard, setClearCard] = useState(true);\n\n  let initialRender = true;\n\n  useEffect(() => {\n    if (initialRender) {\n      initialRender = false;\n\n      return;\n    }\n\n    if (movie.Response === 'False') {\n      setFoundError(true);\n      setClearCard(false);\n    }\n  }, [movie]);\n\n  useEffect(() => {\n    if (movie.Response === 'False') {\n      setFoundError(true);\n      setClearCard(false);\n    }\n  });\n\n  const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (dublikate) {\n      resetError();\n    }\n\n    setFoundError(false);\n    setClearCard(true);\n\n    setQuery(event.target.value);\n  };\n\n  const serchMovie = () => {\n    if (dublikate) {\n      resetError();\n      setClearCard(true);\n    }\n\n    getMovie(query).then((result) => {\n      setMovie(result);\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input',\n                {\n                  'is-danger': foundError,\n                },\n              )}\n              onChange={changeInput}\n            />\n          </div>\n          {movie.Response === 'False'\n            && (\n              <p className=\"field is-grouped\">\n                Can&apos;t find a movie with that title\n              </p>\n            )}\n\n        </div>\n\n        <div\n          className={classNames('is-grouped', 'field')}\n        >\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={serchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames(\n                'button',\n                {\n                  'is-primary': !dublikate,\n                  'is-danger': dublikate,\n                },\n              )}\n              data-cy=\"add\"\n              onClick={() => {\n                addMovie(movie);\n                setQuery('');\n              }}\n              disabled={dublikate}\n            >\n              Add to the list\n            </button>\n            {dublikate\n            && (\n              <span className=\"add-error\">\n                The film is already on the list\n              </span>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie.Response === 'True'\n          && clearCard\n          && (\n            <>\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard\n                id={movie.imdbID}\n                movie={movie}\n              />\n            </>\n          )}\n        {movie.Response === 'False'\n          && (\n            <p>Try another tittle</p>\n          )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './react-app-env';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [dublikate, setDublikate] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    const index: number = movies.findIndex((element: Movie) => (\n      element.imdbID === movie.imdbID));\n\n    if (index === (-1)) {\n      setDublikate(false);\n      setMovies((currentState: Movie[]) => {\n        return [...currentState, { ...movie }];\n      });\n    } else {\n      setDublikate(true);\n    }\n  };\n\n  const resetError = () => {\n    setDublikate(false);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          dublikate={dublikate}\n          resetError={resetError}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}