{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","id","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","title","a","fetch","promis","json","result","FindMovie","addMove","useState","query","setQuery","Response","setMovie","htmlFor","type","value","placeholder","onChange","event","target","console","log","onClick","getMovie","then","App","setMovies","findIndex","element","currentState","ReactDOM","render","document","getElementById"],"mappings":"sUAWaA,EAA6B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC/C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,+BA1BqBP,ICFlBQ,EAA8B,SAACC,GAC1C,IAAQC,EAAWD,EAAXC,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CACED,GAAIC,EAAMW,OACVX,MAAOA,U,2ECjBV,WAAwBY,GAAxB,iBAAAC,EAAA,sEACgBC,MAAM,8CAAD,OAA+CF,IADpE,cACCG,EADD,gBAGgBA,EAAOC,OAHvB,cAGCC,EAHD,yBAKEA,GALF,4C,sBCUA,IAAMC,EAA6B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3C,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAgB,CACxCG,SAAU,GACVlB,MAAO,YACPF,OAAQ,YACRQ,OAAQ,cAJV,mBAAOX,EAAP,KAAcwB,EAAd,KAeA,OACE,qCACE,uBAAMvB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQwB,QAAQ,cAAjC,yBAIA,qBAAKxB,UAAU,UAAf,SACE,uBACEyB,KAAK,OACL3B,GAAG,cACH4B,MAAON,EACPO,YAAY,0BACZ3B,UAAU,kBACV4B,SAAU,SAACC,GACTR,EAASQ,EAAMC,OAAOJ,OACtBK,QAAQC,IAAIZ,QAKlB,mBAAGpB,UAAU,iBAAb,qDAKF,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,kBACViC,QAxCO,YDnBd,SAAP,mCCoBIC,CAASd,GAAOe,MAAK,SAACnB,GACpBe,QAAQC,IAAIhB,GAEZO,EAASP,OAiCH,4BAQF,qBAAKhB,UAAU,UAAf,SACE,wBACEyB,KAAK,SACLzB,UAAU,oBACViC,QAAS,WACPf,EAAQnB,IAJZ,qCAaN,sBAAKC,UAAU,YAAf,UACsB,SAAnBD,EAAMuB,UAEH,qCACE,oBAAItB,UAAU,QAAd,qBACA,cAAC,EAAD,CACEF,GAAIC,EAAMW,OACVX,MAAOA,OAIK,UAAnBA,EAAMuB,UAEH,0DCrFCc,EAAgB,WAC3B,MAA4BjB,mBAAkB,IAA9C,mBAAOX,EAAP,KAAe6B,EAAf,KAaA,OACE,sBAAKrC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQA,MAEtB,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CAAWkB,QAjBD,SAACnB,IAIC,IAHMS,EAAO8B,WAAU,SAACC,GAAD,OACrCA,EAAQ7B,SAAWX,EAAMW,WAGzB2B,GAAU,SAACG,GACT,MAAM,GAAN,mBAAWA,GAAX,gBAA8BzC,iBCbtC0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.33aa2522.chunk.js","sourcesContent":["import React from 'react';\n\nimport './MovieCard.scss';\n\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  id: string,\n  movie: Movie,\n}\n\nexport const MovieCard: React.FC<Props> = ({ id, movie }) => {\n  return (\n    <div className=\"card\" key={id}>\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          id={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import { Movie } from '../react-app-env';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const promis = await fetch(`https://www.omdbapi.com/?apikey=89317555&t=${title}`);\n\n  const result = await promis.json();\n\n  return result;\n}\n\nexport async function getMovieById(id: string): Promise<Movie> {\n  const promis = await fetch(`https://www.omdbapi.com/?tt=${id}&apikey=89317555`);\n\n  const result = await promis.json();\n\n  return result;\n}\n","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../react-app-env';\n\nimport './FindMovie.scss';\nimport { getMovie } from '../../api/api';\n\ninterface Props {\n  addMove: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMove }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie>({\n    Response: '',\n    Title: 'not found',\n    Poster: 'not found',\n    imdbID: 'not found',\n  });\n\n  const serchMovie = () => {\n    getMovie(query).then((result) => {\n      console.log(result);\n\n      setMovie(result);\n    });\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={(event) => {\n                setQuery(event.target.value);\n                console.log(query);\n              }}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={serchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMove(movie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {movie.Response === 'True'\n          && (\n            <>\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard\n                id={movie.imdbID}\n                movie={movie}\n              />\n            </>\n          )}\n        {movie.Response === 'False'\n          && (\n            <p>Try another tittle</p>\n          )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './react-app-env';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMove = (movie: Movie) => {\n    const index: number = movies.findIndex((element: Movie) => (\n      element.imdbID === movie.imdbID));\n\n    if (index === (-1)) {\n      setMovies((currentState: Movie[]) => {\n        return [...currentState, { ...movie }];\n      });\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMove={addMove} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}